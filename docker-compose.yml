version: '3.9'

services:
  backend:
    build: ./backend
    container_name: backend
    ports:
      - "3001:3001"
    depends_on:
      db:
        condition: service_healthy
    environment:
      MYSQL_DATABASE: 'medical_management_db'
      MYSQL_USER: 'user'
      MYSQL_PASSWORD: 'password'
      MYSQL_ROOT_PASSWORD: 'rootpassword'
      JWT_SECRET: 'secret'
      API_PORT: 3001
      MYSQL_HOSTNAME: db
    networks:
      - app-network
    volumes:
      - ./backend:/app
    healthcheck:
      test: ["CMD", "lsof", "-t", "-i:3001"] # Caso utilize outra porta interna para o back, altere ela aqui também
      timeout: 10s
      retries: 5

  frontend:
    build: ./frontend
    container_name: frontend
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
    networks:
      - app-network
    depends_on:
      - backend
    healthcheck:
      test: ["CMD", "lsof", "-t", "-i:3000"]  # Caso utilize outra porta interna para o front, altere ela aqui também
      timeout: 10s
      retries: 5

  db:
    image: mysql:latest
    restart: always
    container_name: db
    environment:
      MYSQL_DATABASE: 'medical_management_db'
      MYSQL_USER: 'user'
      MYSQL_PASSWORD: 'password'
      MYSQL_ROOT_PASSWORD: 'rootpassword'
    ports:
      - '3306:3306'
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "mysqladmin" ,"ping", "-h", "localhost"] # Deve aguardar o banco ficar operacional
      timeout: 10s
      retries: 5

networks:
  app-network:
    driver: bridge
